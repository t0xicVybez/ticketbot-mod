"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const FrameworkComponent_1 = __importDefault(require("../FrameworkComponent"));
const errors_1 = require("../errors");
const events_1 = __importDefault(require("events"));
class Listener extends FrameworkComponent_1.default {
    constructor(client, options) {
        var _a;
        super(client, {
            filepath: options.filepath,
            id: options.event + (client.events.components.size + 1),
            moduleName: 'listeners',
        });
        if (typeof options.event !== 'string')
            throw new errors_1.FrameworkTypeError('InvalidType', 'event', 'string', typeof options.event);
        this.event = options.event;
        if (!(options.emitter instanceof events_1.default))
            throw new errors_1.FrameworkTypeError('InvalidType', 'emitter', 'EventEmitter', typeof this.id);
        this.emitter = options.emitter;
        this.once = (_a = options.once) !== null && _a !== void 0 ? _a : false;
    }
}
exports.default = Listener;
