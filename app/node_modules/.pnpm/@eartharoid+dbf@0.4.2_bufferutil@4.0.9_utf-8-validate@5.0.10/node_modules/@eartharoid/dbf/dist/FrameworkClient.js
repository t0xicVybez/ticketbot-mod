"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const discord_js_1 = require("discord.js");
const fs_1 = require("fs");
const AutocompleteModule_1 = __importDefault(require("./autocomplete/AutocompleteModule"));
const ButtonsModule_1 = __importDefault(require("./buttons/ButtonsModule"));
const CommandsModule_1 = __importDefault(require("./commands/CommandsModule"));
const ListenersModule_1 = __importDefault(require("./listeners/ListenersModule"));
const MenusModule_1 = __importDefault(require("./menus/MenusModule"));
const ModalsModule_1 = __importDefault(require("./modals/ModalsModule"));
const StdinCommandsModule_1 = __importDefault(require("./stdin/StdinCommandsModule"));
class FrameworkClient extends discord_js_1.Client {
    constructor(discordOptions, frameworkOptions) {
        var _a;
        super(discordOptions);
        this.baseDir = (_a = frameworkOptions === null || frameworkOptions === void 0 ? void 0 : frameworkOptions.baseDir) !== null && _a !== void 0 ? _a : ((0, fs_1.existsSync)('./src') ? './src' : './');
        this.mods = new discord_js_1.Collection();
        this.autocomplete = new AutocompleteModule_1.default(this);
        this.buttons = new ButtonsModule_1.default(this);
        this.commands = new CommandsModule_1.default(this);
        this.events = new ListenersModule_1.default(this); // must be initialised last (this.listeners is taken)
        this.menus = new MenusModule_1.default(this);
        this.modals = new ModalsModule_1.default(this);
        this.stdin = new StdinCommandsModule_1.default(this);
        this.events.loadAll(); // must be loaded first
        this.autocomplete.loadAll();
        this.buttons.loadAll();
        this.commands.loadAll();
        this.menus.loadAll();
        this.modals.loadAll();
        this.stdin.loadAll();
    }
}
exports.default = FrameworkClient;
