"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Transport_1 = __importDefault(require("../../Transport"));
const deep_merge_1 = __importDefault(require("@eartharoid/deep-merge"));
const defaults_1 = __importDefault(require("./defaults"));
const dtf_1 = __importDefault(require("@eartharoid/dtf"));
const leeks_js_1 = require("leeks.js");
const dtf = new dtf_1.default('en-GB');
class ConsoleTransport extends Transport_1.default {
    constructor(options = {}) {
        const merged = (0, deep_merge_1.default)(defaults_1.default, options);
        super({ level: merged.level });
        this.options = merged;
    }
    write(log) {
        const content = typeof this.options.format === 'function'
            ? this.options.format.call(this.options, log)
            : (0, leeks_js_1.short)(this.options.format)
                .replace(/{+ ?level ?}+/gm, log.level.name.toLowerCase())
                .replace(/{+ ?LEVEL ?}+/gm, log.level.name.toUpperCase())
                .replace(/{+ ?namespace ?}+/gm, log.namespace?.toLowerCase() ?? 'global')
                .replace(/{+ ?NAMESPACE ?}+/gm, log.namespace?.toUpperCase() ?? 'GLOBAL')
                .replace(/{+ ?file ?}+/gmi, log.file ?? 'unknown')
                .replace(/{+ ?line ?}+/gmi, String(log.line) ?? 'unknown')
                .replace(/{+ ?column ?}+/gmi, String(log.column) ?? 'unknown')
                .replace(/{+ ?content ?}+/gmi, log.content)
                .replace(/{+ ?timestamp ?}+/gmi, typeof this.options.timestamp === 'function'
                ? this.options.timestamp(log.timestamp)
                : dtf.fill(this.options.timestamp, log.timestamp));
        console[log.level.type](content);
    }
}
exports.default = ConsoleTransport;
