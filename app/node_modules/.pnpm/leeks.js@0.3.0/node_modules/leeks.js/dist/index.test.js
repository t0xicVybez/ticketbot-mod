Object.defineProperty(exports, "__esModule", { value: true });
const Colours_1 = require("./data/Colours");
const Styles_1 = require("./data/Styles");
const Keywords_1 = require("./data/Keywords");
const leeks = require(".");
describe('Colors and background colours', () => {
    for (const [name, code] of Object.entries(Colours_1.default)) {
        test(`Expect color '${name}' to resolve correctly while enabled`, () => {
            const expected = `\x1b[${code}mtest\x1b[0m`;
            expect(leeks.colors[name]('test')).toBe(expected);
        });
    }
    for (const name of Object.keys(Colours_1.default)) {
        test(`Expect color '${name}' to resolve correctly without being enabled`, () => {
            leeks.disableColours();
            const expected = 'test';
            expect(leeks.colors[name]('test')).toBe(expected);
            leeks.enableColours();
        });
    }
});
describe('Styles', () => {
    for (const [name, code] of Object.entries(Styles_1.default)) {
        test(`Expect style '${name}' to resolve correctly while enabled`, () => {
            const expected = `\x1b[${code}mtest\x1b[0m`;
            expect(leeks.styles[name]('test')).toBe(expected);
        });
    }
    for (const name of Object.keys(Styles_1.default)) {
        test(`Expect style '${name}' to resolve correctly without being enabled`, () => {
            leeks.disableColours();
            const expected = 'test';
            expect(leeks.styles[name]('test')).toBe(expected);
            leeks.enableColours();
        });
    }
});
describe('Keywords', () => {
    for (const [name, [r, g, b]] of Object.entries(Keywords_1.default)) {
        test(`Expect keyword '${name}' to resolve correctly while colours are enabled`, () => {
            const expected = '\033' + `[38;2;${r};${g};${b}mtest\x1b[0m`;
            expect(leeks.keywords[name]('test')).toBe(expected);
        });
    }
    for (const name of Object.keys(Keywords_1.default)) {
        test(`Expect keyword '${name}' to resolve correctly while colours are disabled`, () => {
            leeks.disableColors();
            const expected = 'test';
            expect(leeks.keywords[name]('test')).toBe(expected);
            leeks.enableColors();
        });
    }
});
